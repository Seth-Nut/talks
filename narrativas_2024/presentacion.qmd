---
title: "De los N√∫meros a la Narrativa"
author: 
  - Francisco Alfaro 
  - Valeska Canales
date: 15 Nov 2024
format: 
  revealjs:
  
    transition: slide
    title-slide-attributes: 
      data-background-image: images/background.jpg
    slide-attributes:
      data-background-image: images/background.jpg
    logo: images/logo_sn.png
---

#### ü§î ¬øAlguna vez has sentido que los datos que analizas no comunican todo su potencial? {background-image="images/background.jpg" background-opacity="0.25"}

::: r-stack
![](images/male_height.jpg){.fragment .fade-in-then-out width="400%" fig-align="left"}

![](images/Honestidad2.png){.fragment .fade-in-then-out width="60%" fig-align="center"}

![](images/buengrafico.png){.fragment width="600%" fig-align="right"}
:::

------------------------------------------------------------------------

## üéØ Objetivos del Taller {background-image="images/background.jpg" background-opacity="0.25"}

::: incremental
<br>

-   üìä Aprender sobre visualizaci√≥n de datos.
-   üßë‚Äçüé® Aprender a crear visualizaciones.
-   üåê Entender c√≥mo construir una app interactiva.
-   üíª Integrar visualizaciones en una aplicaci√≥n web simple.
:::

------------------------------------------------------------------------

## ü§î ¬øQu√© es la Visualizaci√≥n de Datos? {background-image="images/background.jpg" background-opacity="0.25"}

:::::: columns
:::: {.column width="60%"}
::: incremental
-   Representaci√≥n tabular o gr√°fica de datos para facilitar su comprensi√≥n y an√°lisis.

-   Identificar patrones, comunicar hallazgos y apoyar la toma de decisiones.
:::
::::

::: {.column width="40%"}
![](images/eye.jpeg){fig-align="center"}
:::
::::::

------------------------------------------------------------------------

###  Proceso de Visualizaci√≥n de Datos {background-image="images/background.jpg" background-opacity="0.25"}

![](images/napkin-selection.png){width="60%" fig-align="center"}

## Herramientas de Visualizaci√≥n {background-image="images/background_slides3.png" background-opacity="0.3"}

![](images/plotly.jpg){fig-align="center"}

------------------------------------------------------------------------

## ¬øCu√°l gr√°fico elijo? {background-image="images/background.jpg" background-opacity="0.25"}

![](images/graf_abrumado.jpeg){width="60%" fig-align="center"}

------------------------------------------------------------------------

## Tipos de Gr√°ficos Esenciales {background-image="images/background.jpg" background-opacity="0.25"}

::: {style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;"}
<img src="images/viz/chart_01.png" style="width: 75%; height: auto;"/> <img src="images/viz/chart_04.png" style="width: 75%; height: auto;"/>

<img src="images/viz/chart_03.png" style="width: 75%; height: auto;"/> <img src="images/viz/chart_05.png" style="width: 70%; height: auto;"/>

<img src="images/viz/chart_02.png" style="width: 75%; height: auto;"/> <img src="images/viz/chart_07.png" style="width: 85%; height: auto;"/>
:::

. . .

[(C) Essential chart types for data visualization, por Atlassian.]{style="font-size: 0.75em; color: gray"}

------------------------------------------------------------------------

## ![](images/matplolib.png "width:80%"){fig-align="center"} {background-image="images/background.jpg" background-opacity="0.25"}

::: incremental
-   [Matplotlib](https://matplotlib.org/) es una biblioteca para crear gr√°ficos est√°ticos.
-   Tipos de gr√°ficos m√°s comunes:
    -   L√≠neas, Barras, Dispersi√≥n, Histograma.
-   Se usa de forma imperativa.
:::

------------------------------------------------------------------------

## „ÄΩÔ∏è Ejemplo: l√≠neas {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4]
y = [10, 20, 25, 30]
plt.figure(figsize=(4, 3))
plt.plot(x, y)
plt.show()
```

------------------------------------------------------------------------

## „ÄΩÔ∏è Ejemplo: dispersi√≥n {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [9.17, 5.72, 0.82, 3.80, 8.55, 9.95, 3.17, 3.17, 1.50, 4.20]
y = [6.13, 7.14, 3.42, 4.60, 7.40, 1.76, 5.05, 1.93, 3.36, 4.04]
plt.figure(figsize=(4, 3))
plt.scatter(x, y)
plt.show()
```

------------------------------------------------------------------------

## „ÄΩÔ∏è Ejemplo: barras {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4]
y = [10, 20, 25, 30]
plt.figure(figsize=(4, 3))
plt.bar(x, y)
plt.show()
```

------------------------------------------------------------------------

##  {background-image="images/background.jpg" background-opacity="0.25"}

![](images/Anatomy_1.png){fig-align="center"}

------------------------------------------------------------------------

## „ÄΩÔ∏è Ejemplo: barras horizontales {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
y = [10, 12, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28]
plt.figure(figsize=(6, 3))
plt.barh(x, y, color='salmon')
plt.title("Gr√°fico de barras horizontales", fontsize=16)
plt.xlabel("Eje X", fontsize=14)
plt.ylabel("Eje Y", fontsize=14)
plt.grid(True)
plt.show()
```

------------------------------------------------------------------------

## ![](images/seaborn.png){fig-align="center"} {background-image="images/background.jpg" background-opacity="0.25"}

::: incremental
-   [Seaborn](https://seaborn.pydata.org/) extiende Matplotlib con gr√°ficos m√°s estilizados.
-   Especialmente √∫til para:
    -   Gr√°ficos estad√≠sticos.
    -   An√°lisis exploratorio de datos.
-   Se usa de forma declarativa.
:::

------------------------------------------------------------------------

## üìä Ejemplo: penguins {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Cargar el conjunto de datos Iris desde seaborn
penguins = sns.load_dataset("penguins")

# Borrar nulos
penguins = penguins.dropna()

# Mostrar las primeras filas para entender el conjunto de datos
penguins.head()

```

------------------------------------------------------------------------

## üìä Ejemplo: dispersi√≥n {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

``` python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='bill_length_mm', y='bill_depth_mm', data=penguins, 
                color='salmon')

# Mostrar el gr√°fico
plt.show()
```

. . .

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='bill_length_mm', y='bill_depth_mm', data=penguins, 
                color='salmon')

# Mostrar el gr√°fico
plt.show()
```

------------------------------------------------------------------------

## üìä Ejemplo: dispersi√≥n {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

``` python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='flipper_length_mm', y='body_mass_g', data=penguins, 
                color='salmon', hue= "sex")

# Mostrar el gr√°fico
plt.show()
```

. . .

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='flipper_length_mm', y='body_mass_g', data=penguins, 
                color='salmon', hue='sex')

# Mostrar el gr√°fico
plt.show()
```

------------------------------------------------------------------------

## üìä Matplotlib vs Seaborn {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

``` python
import matplotlib.pyplot as plt

# Contar la cantidad de Ping√ºinos por tipo
penguins_type = penguins["species"].value_counts()

# Crear un gr√°fico de barras
plt.figure(figsize=(6, 3))
penguins_type.plot(kind="bar", color="salmon")

# Mostrar gr√°fico
plt.show()
```

. . .

```{python}
import matplotlib.pyplot as plt

# Contar la cantidad de Ping√ºinos por tipo
penguins_type = penguins["species"].value_counts()

# Crear un gr√°fico de barras
plt.figure(figsize=(6, 3))
penguins_type.plot(kind="bar", color="salmon")

# Mostrar gr√°fico
plt.show()

```

## üìä Matplotlib vs Seaborn {.scrollable background-image="images/background.jpg" background-opacity="0.25"}

``` python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear el gr√°fico de barras con seaborn
plt.figure(figsize=(6, 3))
sns.countplot(data=penguins, x="species", color="salmon")

# Mostrar el gr√°fico
plt.show()
```

. . .

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear el gr√°fico de barras con seaborn
plt.figure(figsize=(6, 3))
sns.countplot(data=penguins, x="species", color="salmon")

# Mostrar el gr√°fico
plt.show()
```

------------------------------------------------------------------------

## Streamlit: Apps Web Interactivas {background-image="images/background.jpg" background-opacity="0.25"}

![](images/napkin-st.png){fig-align="center"}

------------------------------------------------------------------------

## Ejemplo de Streamlit {background-image="images/background.jpg" background-opacity="0.25"}

<img src="./images/streamlit/streamlit.gif" style="width:90%;"/><br>

------------------------------------------------------------------------

##  {auto-animate="true"}

::: {style="margin-top: 100px;"}
¬°Ahora te toca a ti!ü´µ
:::

##  {auto-animate="true"}

::: {style="margin-top: 200px; font-size: 3em; color: red;"}
¬°Ahora te toca a ti!ü´µ
:::

------------------------------------------------------------------------

## üßëüèª‚Äçüíªüë©üèª‚Äçüíª Taller de Streamlit {background-image="images/background.jpg" background-opacity="0.25"}

::: incremental
1.  Construir una aplicaci√≥n paso a paso.
2.  Integrar visualizaciones interactivas.
3.  Personalizar tu aplicaci√≥n para compartir tus an√°lisis.
:::

------------------------------------------------------------------------

## üéì Conclusi√≥n {background-image="images/background.jpg" background-opacity="0.25"}

::: incremental
-   Matplotlib: Ideal para personalizaci√≥n detallada y gr√°ficos b√°sicos.
-   Seaborn: Simplifica la creaci√≥n de gr√°ficos avanzados con menos c√≥digo y mejor dise√±o.
-   Streamlit: La herramienta perfecta para transformar an√°lisis en aplicaciones interactivas y compartir resultados f√°cilmente.
:::

## üéâ ¬°Gracias por Participar! {background-image="images/background.jpg" background-opacity="0.25"}

::::: columns
::: {.column width="50%"}
<br>

‚ùì¬øPreguntas?

üëè Responder [encuesta](https://docs.google.com/forms/d/138bV1-9850Jmo_-hyWrDhaynkvP1l730L4JzPPMKmUQ/edit)

ü•≥ Gracias de Nuevo
:::

::: {.column width="50%" align="center"}
![](images/codigo_qr.jpg){width="400"}
:::
:::::

> üîó Nuestro Sitio Web: [seth-nut.github.io/resources](https://seth-nut.github.io/resources/).
