---
title: "De los N√∫meros a la Narrativa"
author: 
  - Francisco Alfaro 
  - Valeska Canales
date: 15 Nov 2024
format: 
  revealjs:
  
    transition: slide
    title-slide-attributes: 
      data-background-image: images/background.jpg
    slide-attributes:
      data-background-image: images/background.jpg
    logo: images/logo_sn.png
    
---

## ü§î ¬øAlguna vez has sentido que los datos que analizas no comunican todo su potencial? {background-image="images/background.jpg" background-opacity="0.25"}

::: {.r-stack}
![](images/male_height.jpg){.fragment .fade-in-then-out width="400%" fig-align="left"}

![](images/Honestidad2.png){.fragment .fade-in-then-out width="60%" fig-align="center"}

![](images/buengrafico.png){.fragment width="600%" fig-align="right"}

:::

---

## üéØ Objetivos del Taller {background-image="images/background.jpg" background-opacity="0.25"}

::: {.incremental}
* üìä Aprender sobre visualizaci√≥n de datos.
* üßë‚Äçüé® Aprender a crear visualizaciones.
* üåê Entender c√≥mo construir una app interactiva.
* üíª Integrar visualizaciones en una aplicaci√≥n web simple.
:::

---

## ü§î ¬øQu√© es la Visualizaci√≥n de Datos? {background-image="images/background.jpg" background-opacity="0.25"}

::: columns
::: {.column width="60%"}
<br>
La visualizaci√≥n de datos transforma informaci√≥n en gr√°ficos para facilitar su comprensi√≥n. 
:::

::: {.column width="40%" .fragment}
![](images/eye.jpeg){fig-align="center"}
:::
:::

---

## Cuarteto de ANSCOMBE {background-image="images/background.jpg" background-opacity="0.25"}
::: columns
::: {.column width="50%" style="text-align: center;" }
![](images/viz/canscombe_01.png){fig-align="center" width="80%"}
:::
::: {.column width="50%" .fragment style="text-align: center;" }
<br>
![](images/viz/canscombe_02.png){fig-align="center" width="100%"}
:::
:::

::: {style="text-align:center" .fragment}
üìã Tablas vs üìä Gr√°ficos
:::

---

## Teor√≠a de visualizaci√≥n {background-image="images/background.jpg" background-opacity="0.25"}

![](images/viz/teoria_vis.png){fig-align="center" width="90%"}

---

## 4 Pilares Visualizaci√≥n -  Noah Iliinsky {background-image="images/background.jpg" background-opacity="0.25"}

::: columns
::: {.column width="60%" .fragment .incremental}
<br>

1. **Prop√≥sito**: Define la meta.
2. **Contenido**: Datos relevantes.
3. **Estructura**: Organizaci√≥n clara.
4. **Formato**: Gr√°fico adecuado.

:::

::: {.column width="40%" }
![](images/viz/pilar2.png){fig-align="center"}
:::
:::

---

## Herramientas de Visualizaci√≥n en Python {background-image="images/background_slides3.png" background-opacity="0.3"}

![](images/plotly.jpg){fig-align="center"}

---

## Exploraci√≥n de Datos {background-image="images/background.jpg" background-opacity="0.25"}

. . .

![](images/viz/looker.png){width=400 style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)"}

. . .

![](images/viz/tableau.png){.absolute top=125 left=25 width=800 style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);"}

. . .

![](images/viz/pbi.png){.absolute top=150 left=50 width=800 style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);"}

. . .

[¬°Demasiadas opciones! <br> El usuario no puede ser responsable de encontrar lo valioso.]{ style="background-color: #fff" }

---

## Tipos de Gr√°ficos Esenciales {background-image="images/background.jpg" background-opacity="0.25"}



<div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;">

<img src="images/viz/chart_01.png" style="width: 75%; height: auto;"/> 
<img src="images/viz/chart_04.png" style="width: 75%; height: auto;"/>

<img src="images/viz/chart_03.png" style="width: 75%; height: auto;"/>
<img src="images/viz/chart_05.png" style="width: 70%; height: auto;"/>

<img src="images/viz/chart_02.png" style="width: 75%; height: auto;"/>
<img src="images/viz/chart_07.png" style="width: 85%; height: auto;"/>

</div>

. . .

[(C) Essential chart types for data visualization, por Atlassian.]{style="font-size: 0.75em; color: gray"}

---

## ![](images/matplolib.webp "width:80%"){fig-align="center"} {background-image="images/background.jpg" background-opacity="0.25"}

::: {.incremental}
* [Matplotlib](https://matplotlib.org/) es una biblioteca para crear gr√°ficos est√°ticos.
* Tipos de gr√°ficos m√°s comunes:
    * L√≠neas, Barras, Dispersi√≥n, Histograma.

:::

---

## „ÄΩÔ∏è Ejemplo: l√≠neas {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4]
y = [10, 20, 25, 30]
plt.figure(figsize=(4, 3))
plt.plot(x, y)
plt.show()
```

---

## „ÄΩÔ∏è Ejemplo: dispersi√≥n {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
y = [10, 15, 20, 25, 30, 35, 40, 45, 50, 55]
plt.figure(figsize=(4, 3))
plt.scatter(x, y)
plt.show()
```

---

## „ÄΩÔ∏è Ejemplo: barras {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4]
y = [10, 20, 25, 30]
plt.figure(figsize=(4, 3))
plt.bar(x, y)
plt.show()
```

---

##  {background-image="images/background.jpg" background-opacity="0.25"}

![](images/Anatomy_1.png){fig-align="center"}

---

## „ÄΩÔ∏è Ejemplo: barras horizontales {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```{pyodide-python}
import matplotlib.pyplot as plt
x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
y = [10, 12, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28]
plt.figure(figsize=(6, 3))
plt.barh(x, y, color='salmon')
plt.title("Gr√°fico de barras horizontales", fontsize=16)
plt.xlabel("Eje X", fontsize=14)
plt.ylabel("Eje Y", fontsize=14)
plt.grid(True)
plt.show()
```

---

## ![](images/seaborn.png){fig-align="center"} {background-image="images/background.jpg" background-opacity="0.25"}

::: {.incremental}

* [Seaborn](https://seaborn.pydata.org/)
 extiende Matplotlib con gr√°ficos m√°s estilizados.
* Especialmente √∫til para:
    * Gr√°ficos estad√≠sticos.
    * An√°lisis exploratorio de datos.
  
:::

---

## üìä Ejemplo: penguins {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Cargar el conjunto de datos Iris desde seaborn
penguins = sns.load_dataset("penguins")

# Borrar nulos
penguins = penguins.dropna()

# Mostrar las primeras filas para entender el conjunto de datos
penguins.head()

```

---

## üìä Ejemplo: dispersi√≥n {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='bill_length_mm', y='bill_depth_mm', data=penguins, 
                color='salmon')

# Mostrar el gr√°fico
plt.show()
```
. . .

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='bill_length_mm', y='bill_depth_mm', data=penguins, 
                color='salmon')

# Mostrar el gr√°fico
plt.show()
```
---

## üìä Ejemplo: dispersi√≥n {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='flipper_length_mm', y='body_mass_g', data=penguins, 
                color='salmon', hue= "sex")

# Mostrar el gr√°fico
plt.show()
```
. . .

```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear un gr√°fico de dispersi√≥n con seaborn
plt.figure(figsize=(6, 3))
sns.scatterplot(x='flipper_length_mm', y='body_mass_g', data=penguins, 
                color='salmon', hue='sex')

# Mostrar el gr√°fico
plt.show()
```
---

## üìä Matplotlib vs Seaborn {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```python
import matplotlib.pyplot as plt

# Contar la cantidad de Ping√ºinos por tipo
penguins_type = penguins["species"].value_counts()

# Crear un gr√°fico de barras
plt.figure(figsize=(6, 3))
penguins_type.plot(kind="bar", color="salmon")

# Mostrar gr√°fico
plt.show()
```

```{python}
import matplotlib.pyplot as plt

# Contar la cantidad de Ping√ºinos por tipo
penguins_type = penguins["species"].value_counts()

# Crear un gr√°fico de barras
plt.figure(figsize=(6, 3))
penguins_type.plot(kind="bar", color="salmon")

# Mostrar gr√°fico
plt.show()

```

## üìä Matplotlib vs Seaborn {background-image="images/background.jpg" background-opacity="0.25".scrollable}

```python
import seaborn as sns
import matplotlib.pyplot as plt

# Crear el gr√°fico de barras con seaborn
plt.figure(figsize=(6, 3))
sns.countplot(data=penguins, x="species", color="salmon")

# Mostrar el gr√°fico
plt.show()
```
```{python}
import seaborn as sns
import matplotlib.pyplot as plt

# Crear el gr√°fico de barras con seaborn
plt.figure(figsize=(6, 3))
sns.countplot(data=penguins, x="species", color="salmon")

# Mostrar el gr√°fico
plt.show()
```

---

## üßëüèª‚Äçüíª Aplicaciones Web Interactivas {background-image="images/background.jpg" background-opacity="0.25"}

::: {.incremental}
* Streamlit permite crear aplicaciones web r√°pidamente.
* Puedes integrar gr√°ficos creados con Matplotlib y Seaborn.
* Ideal para compartir resultados de an√°lisis de datos.
:::

---

## Ejemplo de Streamlit {background-image="images/background.jpg" background-opacity="0.25"}

<img style="width:90%;" src="./images/streamlit/streamlit.gif"><br>

---

## {auto-animate=true}

::: {style="margin-top: 100px;"}
¬°Ahora te toca a ti!ü´µ
:::

## {auto-animate=true}

::: {style="margin-top: 200px; font-size: 3em; color: red;"}
¬°Ahora te toca a ti!ü´µ
:::

---

## üéì Conclusi√≥n {background-image="images/background.jpg" background-opacity="0.25"}

::: {.incremental}
* Matplotlib para gr√°ficos b√°sicos.
* Seaborn para gr√°ficos avanzados.
* Streamlit para aplicaciones interactivas.
:::
